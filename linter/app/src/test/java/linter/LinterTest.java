/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.Test;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

import static org.junit.Assert.*;

public class LinterTest {
   @Test public void testLinterEmptyFile() throws FileNotFoundException {
       File file = new File("src/test/resources/empty.js");
       Scanner sc = new Scanner(file);
       String result = Linter.runLinter(sc);
       assertEquals("empty file has no errors", result, "");
   }

    @Test public void testLinterSemicolonNoErrors() throws FileNotFoundException {
        File file = new File("src/test/resources/noErrors.js");
        Scanner sc = new Scanner(file);
        String result = Linter.runLinter(sc);
        assertEquals("empty file has no errors", "", result);
    }

    @Test public void testLinterSemicolonOneError() throws FileNotFoundException {
        File file = new File("src/test/resources/oneError.js");
        Scanner sc = new Scanner(file);
        String result = Linter.runLinter(sc);
        assertNotEquals("file with errors returns non-empty string", "", result);
        assertEquals("contains the correct line number", "Line 3: Missing semicolon.\n", result);
    }

    @Test public void testLinterSemicolonSeveralErrors() throws FileNotFoundException {
        File file = new File("src/test/resources/manyErrors.js");
        Scanner sc = new Scanner(file);
        String result = Linter.runLinter(sc);
        assertEquals("indicates the correct number of errors", 3, result.lines().count());
    }

    @Test public void testLinterSemicolonVeryManyErrors() throws FileNotFoundException {
        File file = new File("src/test/resources/gates.js");
        Scanner sc = new Scanner(file);
        String result = Linter.runLinter(sc);
        assertEquals("indicates the correct number of errors", 52, result.lines().count());
    }
}
